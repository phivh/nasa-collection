{"version":3,"sources":["webpack:///./src/actions/fetch.js","webpack:///./node_modules/reselect/es/index.js","webpack:///./src/components/AddCollection/index.js","webpack:///./src/containers/modalContainer.js"],"names":["fetch","dispatch","getState","data","JSON","parse","localStorage","getItem","type","fetchedLocal","__webpack_require__","d","__webpack_exports__","defaultEqualityCheck","a","b","createSelector","memoize","_len","arguments","length","memoizeOptions","Array","_key","_len2","funcs","_key2","recomputations","resultFunc","pop","dependencies","isArray","every","dep","dependencyTypes","map","join","Error","getDependencies","memoizedResultFunc","apply","undefined","concat","selector","params","i","push","resetRecomputations","createSelectorCreator","func","equalityCheck","lastArgs","lastResult","prev","next","areArgumentsShallowlyEqual","fontawesome","library","add","faCheck","faChevronDown","faTimes","AddCollection","props","_this","_classCallCheck","this","_getPrototypeOf","call","state","id","selectedItem","nasa_id","title","location","date","date_created","description","media_type","favorite","thumb","fileUrl","handleSubmit","bind","_assertThisInitialized","handleChange","handleClose","Component","event","_this2","preventDefault","some","item","pathname","indexOf","updateDataLocal","itemLocal","setItem","stringify","history","refesh","setState","target","name","value","goBack","_this3","file","then","response","json","responseJson","videoUrl","find","catch","error","console","react_default","createElement","className","onClick","react_fontawesome_index_es","icon","size","onSubmit","ref","htmlFor","onChange","propTypes","PropTypes","object","getSelectedItem","match","withRouter","connect","local","store"],"mappings":"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","file":"5.bundle.js","sourcesContent":["// import pagination from './pagination'; import fetchingError from\n// './fetchingError';\n\nexport function fetchedLocal(data) {\n    return {type: 'FETCHED_LOCAL', data};\n}\n\nexport function fetch() {\n    return function(dispatch, getState) {\n        let data = JSON.parse(localStorage.getItem('data'));\n        \n        if(!data) {\n            data = []\n        }\n        \n        dispatch(fetchedLocal(data));\n    }\n}","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport fontawesome from '@fortawesome/fontawesome'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faCheck, faChevronDown, faTimes} from '@fortawesome/fontawesome-free-solid'\n//import '../../scss/components/modal.scss';\n\nfontawesome\n    .library\n    .add({faCheck, faChevronDown, faTimes});\n\nclass AddCollection extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: JSON.parse(localStorage.getItem(\"data\"))\n                ? JSON.parse(localStorage.getItem(\"data\"))\n                : [],\n            id: this.props.selectedItem.data.nasa_id,\n            title: this.props.selectedItem.data.title,\n            location: this.props.selectedItem.data.location\n                ? this.props.selectedItem.data.location\n                : '',\n            date: this.props.selectedItem.data.date_created,\n            description: this.props.selectedItem.data.description,\n            media_type: this.props.selectedItem.data.media_type,\n            favorite: this.props.selectedItem.favorite\n                ? this.props.selectedItem.favorite\n                : false,\n            thumb: this.props.selectedItem.thumb,\n            fileUrl: this.props.selectedItem.fileUrl ? this.props.selectedItem.fileUrl : ''\n        }\n        this.handleSubmit = this\n            .handleSubmit\n            .bind(this)\n        this.handleChange = this\n            .handleChange\n            .bind(this)\n        this.handleClose = this\n            .handleClose\n            .bind(this)\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n\n        if (this.state.data.some(item => {\n            return item.data.nasa_id === this.state.id\n        }) && this.props.location.pathname.indexOf('edit') > -1) {\n            let updateDataLocal = this\n                .state\n                .data\n                .map(itemLocal => {\n                    if (itemLocal.data.nasa_id === this.state.id) {\n                        itemLocal = {\n                            data: {\n                                nasa_id: this.state.id,\n                                title: this.state.title,\n                                location: this.state.location,\n                                date_created: this.state.date,\n                                description: this.state.description,\n                                media_type: this.state.media_type\n                            },\n                            favorite: this.state.favorite,\n                            thumb: this.state.thumb,\n                            fileUrl: this.state.fileUrl\n                        }\n                    }\n                    return itemLocal;\n                })\n            //console.log(updateDataLocal);\n            localStorage.setItem('data', JSON.stringify(updateDataLocal));\n        } else {\n            const item = {\n                data: {\n                    nasa_id: this.state.id,\n                    title: this.state.title,\n                    location: this.state.location,\n                    date_created: this.state.date,\n                    description: this.state.description,\n                    media_type: this.state.media_type\n                },\n                favorite: this.state.favorite,\n                thumb: this.state.thumb,\n                fileUrl: this.state.fileUrl\n                    ? this.state.fileUrl\n                    : this.state.thumb\n            }\n            if (!this.state.data.some(item => {\n                return item.data.nasa_id === this.state.id\n            }) && this.props.location.pathname.indexOf('add') > -1) {\n                this\n                .state\n                .data\n                .push(item);\n            }\n            \n            localStorage.setItem('data', JSON.stringify(this.state.data));\n        }\n\n        this\n            .props\n            .history\n            .push('/');\n        this\n            .props\n            .refesh()\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n    handleClose() {\n        this\n            .props\n            .history\n            .goBack();\n    }\n    componentDidMount() {\n        if (this.props.selectedItem.file) {\n            fetch(this.props.selectedItem.file).then((response) => response.json()).then((responseJson) => {\n                let videoUrl = responseJson.find(item => item.indexOf('mp4') > -1)\n\n                this.setState({fileUrl: videoUrl})\n            }).catch((error) => {\n                console.error(error);\n            });\n        }\n    }\n    render() {\n\n        const fileUrl = this.state.fileUrl && this.state.fileUrl.length > 0\n            ? this.state.fileUrl\n            : this.props.selectedItem.thumb\n        return (\n            <div className=\"modal\">\n                <div className=\"modal__container\">\n                    <div className=\"modal__content\">\n                        <h2>\n                            {this\n                                .props\n                                .location\n                                .pathname\n                                .indexOf('add') > -1 && ('Add to collection')}\n                            {this\n                                .props\n                                .location\n                                .pathname\n                                .indexOf('edit') > -1 && ('Edit')}\n                            <button onClick={this.handleClose}>\n                                <FontAwesomeIcon icon=\"times\" size=\"lg\"/>\n                            </button>\n                        </h2>\n                        <form onSubmit={this.handleSubmit} ref=\"form\">\n\n                            <div className=\"para-item\">\n                                <label htmlFor=\"title\">Title</label>\n                                <input\n                                    type=\"text\"\n                                    value={this.state.title}\n                                    onChange={this.handleChange}\n                                    name=\"title\"\n                                    id=\"title\"/>\n                            </div>\n                            <div className=\"para-item\">\n                                <label htmlFor=\"desc\">Description</label>\n                                <textarea\n                                    value={this.state.description}\n                                    name=\"description\"\n                                    onChange={this.handleChange}\n                                    id=\"desc\"></textarea>\n                            </div>\n                            <div className=\"para-item select\">\n                                <label htmlFor=\"type\">Type</label>\n                                <select name=\"type\" id=\"media_type\" onChange={this.handleChange}>\n                                    <option value={this.state.media_type}>\n                                        {this.state.media_type}\n                                    </option>\n                                </select>\n                                <FontAwesomeIcon icon=\"chevron-down\" size=\"lg\"/>\n                            </div>\n                            <div className=\"para-item\">\n                                <label htmlFor=\"type\">Link preview image url\n                                    <i>*</i>\n                                </label>\n                                <input\n                                    name=\"thumb\"\n                                    type=\"text\"\n                                    value={this.state.thumb}\n                                    onChange={this.handleChange}\n                                    id=\"thumbUrl\"/>\n                            </div>\n                            <div className=\"para-item\">\n                                <label htmlFor=\"type\">Link file url\n                                    <i>*</i>\n                                </label>\n                                <input\n                                    name=\"file\"\n                                    type=\"text\"\n                                    value={fileUrl}\n                                    onChange={this.handleChange}\n                                    id=\"thumbUrl\"/>\n                            </div>\n                            <button className=\"button-checked\">\n                                <FontAwesomeIcon icon=\"check\" size=\"lg\"/> {this\n                                    .props\n                                    .location\n                                    .pathname\n                                    .indexOf('add') > -1 && ('Add to collection')}\n                                {this\n                                    .props\n                                    .location\n                                    .pathname\n                                    .indexOf('edit') > -1 && ('Update Colection')}\n                            </button>\n                        </form>\n                    </div>\n                </div>\n                <div className=\"modal__overlay\"></div>\n            </div>\n        )\n    }\n}\n\nAddCollection.propTypes = {\n    selectedItem: PropTypes.object,\n    refesh: PropTypes.func,\n    location: PropTypes.object\n}\n\nexport default AddCollection","import {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom'\nimport AddCollection from '../components/AddCollection';\nimport {createSelector} from 'reselect';\nimport {fetch} from '../actions/fetch';\nimport fetching from '../actions/fetching';\n\n\nconst getItem = (state, props) => {\n    return state.find((item, i) => item.data.nasa_id === props.match.params.id);\n}\n\nconst getSelectedItem = createSelector([getItem], (item, props) => item)\n\nconst mapStateToProps = (state, props) => {\n    let data;\n    if(props.location.pathname.indexOf('add') > -1) {\n        data = state.data\n    } else {\n        data = state.local\n    }\n    return {\n        selectedItem: getSelectedItem(data, props),\n        history: props.history,\n        location: props.location\n    }\n}\nconst mapDispatchToProps = (dispatch, store) => {\n    return {\n        refesh: () => {\n            dispatch(fetch());\n        }\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AddCollection));\n"],"sourceRoot":""}